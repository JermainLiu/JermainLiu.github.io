[{"title":"Markdown中公式的使用","slug":"Markdown中公式的使用","date":"2020-03-10T12:24:04.000Z","updated":"2020-03-10T14:47:20.058Z","comments":true,"path":"2020/03/10/Markdown中公式的使用/","link":"","permalink":"http://yoursite.com/2020/03/10/Markdown%E4%B8%AD%E5%85%AC%E5%BC%8F%E7%9A%84%E4%BD%BF%E7%94%A8/","excerpt":"0. 说明 学习中使用Markdown记笔记，少不了使用公式； 本次主要说明基本公式的使用，之后会继续更新。","text":"0. 说明 学习中使用Markdown记笔记，少不了使用公式； 本次主要说明基本公式的使用，之后会继续更新。 1. 基本公式使用1.1 插入公式 数学公式有两种：行中公式和独立公式。行中公式与文中其他文字混编，独立公式单独成行。 行中公式： 1$数学公式$ 独立公式： 1$$独立公式$$ 自动编号的公式可以用如下方法表示： 1234\\begin&#123;equation&#125;数学公式\\label&#123;eq:当前公式名&#125;\\end&#123;equation&#125; 自动编号后的公式可在全文任意处使用\\eqref{eq:公式名}语句引用。 例子1： 1$\\text &#123;行中公式示例：&#125; J_\\alpha(x) &#x3D; \\sum_&#123;m&#x3D;0&#125;^\\infty \\frac&#123;(-1)^m&#125;&#123;m! \\Gamma (m + \\alpha + 1)&#125; &#123;\\left(&#123; \\frac &#123;x&#125;&#123;2&#125; &#125;\\right)&#125;^&#123;2m + \\alpha&#125;$ 显示：$\\text {行中公式示例：} J_\\alpha(x) = \\sum_{m=0}^\\infty \\frac{(-1)^m}{m! \\Gamma (m + \\alpha + 1)} {\\left({ \\frac {x}{2} }\\right)}^{2m + \\alpha}$ 例子2： 1$$\\text &#123;独立公式示例：&#125; J_\\alpha(x) &#x3D; \\sum_&#123;m&#x3D;0&#125;^\\infty \\frac&#123;(-1)^m&#125;&#123;m! \\Gamma (m + \\alpha + 1)&#125; &#123;\\left(&#123; \\frac &#123;x&#125;&#123;2&#125; &#125;\\right)&#125;^&#123;2m + \\alpha&#125;$$ 显示： $$\\text {独立公式：} J_\\alpha(x) = \\sum_{m=0}^\\infty \\frac{(-1)^m}{m! \\Gamma (m + \\alpha + 1)} {\\left({ \\frac {x}{2} }\\right)}^{2m + \\alpha}$$ 1.2 输入上下标 ^表示上标，_表示下标。如果上下标的内容多于一个字符，需要使用{}将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。 例子： 1$$x^&#123;y^z&#125;&#x3D;(1+&#123;\\rm e&#125;^x)^&#123;-2xy^w&#125;$$ 显示：$$x^{y^z}=(1+{\\rm e}^x)^{-2xy^w}$$ 另外，如果要在左右两边都有是上下标，可以用\\sideset命令。 例子： 1$$\\sideset&#123;^1_2&#125;&#123;^3_4&#125; x$$ 显示：$$\\sideset{^1_2}{^3_4} x$$ 1.3 输入括号和分隔符 ()、[]和|表示符号本身，使用\\{\\}来表示{}。当要显示大号的括号或分隔符时，要用\\left和\\right命令。 一些特殊的括号： 输入 显示 输入 显示 \\langle $\\langle$ \\rangle $\\rangle$ \\lceil $\\lceil$ \\rceil $\\rceil$ \\lfloor $\\lfloor$ \\rfloor $\\rfloor$ \\lbrace $\\lbrace$ \\rbrace $\\rbrace$ 例子1： 1$$f(x,y,z)&#x3D;3y^2z \\left( 3+\\frac&#123;7x+5&#125;&#123;1+y^2&#125; \\right)$$ 显示：$$f(x,y,z)=3y^2z \\left( 3+\\frac{7x+5}{1+y^2} \\right)$$ 有时需要用\\left.或者\\right.进行匹配而不显示本身。 例子2： 1$$\\left. \\frac&#123;du&#125;&#123;dx&#125; \\right| _&#123;x&#x3D;0&#125;$$ 显示：$$\\left. \\frac{du}{dx} \\right| _{x=0}$$ 1.4 输入分数 通常使用\\frac{分子}{分母}命令产生一个分数，分数可以嵌套。 当分子（分母）只有一个字符时，可以不用花括号。 如果分式很复杂，也可以使用分子 \\over 分母命令，此时分数仅有一层。 例子： 1$$\\frac&#123;a-1&#125;&#123;b-1&#125; \\quad and \\quad &#123;a+1\\over b+1&#125;$$ 显示：$$\\frac{a-1}{b-1} \\quad and \\quad {a+1\\over b+1}$$ 1.5 输入开方 使用\\sqrt{根指数，省略时默认为2}{被开方数}命令输入开方。 例子： 1$$\\sqrt&#123;2&#125; \\quad and \\quad \\sqrt&#123;n&#125;&#123;3&#125;$$ 显示：$$\\sqrt{2} \\quad and \\quad \\sqrt{n}{3}$$ 1.6 输入省略号 常见的省略号有两种，\\ldots表示与文本底线对齐的省略号，\\cdots表示与文本中线对齐的省略号。 例子： 1$$f(x_1,x_2,\\underbrace&#123;\\ldots&#125;_&#123;\\rm ldots&#125;, x_n) &#x3D; x_1^2 + x_2^2 \\underbrace&#123;\\cdots&#125;_&#123;rm \\cdots&#125; + x_n^2$$ 显示：$$f(x_1,x_2,\\underbrace{\\ldots}{\\rm ldots}, x_n) = x_1^2 + x_2^2 \\underbrace{\\cdots}{rm \\cdots} + x_n^2$$ 1.7 输入矢量 使用\\vec{矢量}来自动产生一个矢量。也可以使用\\overrightarrow等命令自定义字母上方的符号。 例子1： 1$$\\vec&#123;a&#125; \\cdot \\vec(b)&#x3D;0$$ 显示：$$\\vec{a} \\cdot \\vec(b)=0$$ 例子2： 1$$\\overleftarrow&#123;xy&#125; \\quad and \\quad \\overleftrightarrow&#123;xy&#125; \\quad and \\quad \\overrightarrow(xy)$$ 显示：$$\\overleftarrow{xy} \\quad and \\quad \\overleftrightarrow{xy} \\quad and \\quad \\overrightarrow(xy)$$ 1.8 输入积分 使用\\int_积分下限^积分上限 {被积表达式}来输入一个积分。 例子： 1$$\\int_0^1 &#123;x^2&#125; \\,&#123;\\rm d&#125;x$$ 显示：$$\\int_0^1 {x^2} ,{\\rm d}x$$ 本式中\\,和{\\rm d}部分可以省略，但建议加入，能使式子更美观。 1.9 输入极限符号 使用\\lim_{变量 \\to 表达式} 表达式来输入一个极限。如有需求，可以更改\\to符号至任意符号。 例子： 1$$\\lim_&#123;n \\to +\\infty&#125; \\frac&#123;1&#125;&#123;n(n+1)&#125; \\quad and \\quad \\lim_&#123;x\\leftarrow&#123;示例&#125;&#125; \\frac&#123;1&#125;&#123;n(n+1)&#125;$$ 显示：$$\\lim_{n \\to +\\infty} \\frac{1}{n(n+1)} \\quad and \\quad \\lim_{x\\leftarrow{示例}} \\frac{1}{n(n+1)}$$ 1.10 输入累加、累乘运算 使用\\sum_{下标表达式}^{上标表达式} {累加表达式}来输入一个累加。 与之类似，使用\\prod、\\bigcup、\\bigcap来分别输入累乘、并集和交集。 此符号在行内显示时上下标表达式将会移至右上角和右下角。 例子： 1$$\\sum_&#123;i&#x3D;1&#125;^n \\frac&#123;1&#125;&#123;i^2&#125; \\quad and \\quad \\prod_&#123;i&#x3D;1&#125;^n \\frac&#123;1&#125;&#123;i^2&#125; \\quad and \\quad \\bigcup_&#123;i&#x3D;1&#125;^&#123;2&#125; R$$ 显示：$$\\sum_{i=1}^n \\frac{1}{i^2} \\quad and \\quad \\prod_{i=1}^n \\frac{1}{i^2} \\quad and \\quad \\bigcup_{i=1}^{2} R$$","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://yoursite.com/tags/Markdown/"},{"name":"公式","slug":"公式","permalink":"http://yoursite.com/tags/%E5%85%AC%E5%BC%8F/"}]},{"title":"Hexo主题添加网页访问计数功能","slug":"Hexo主题添加网页访问计数功能","date":"2020-03-09T14:24:29.000Z","updated":"2020-03-10T14:41:27.694Z","comments":true,"path":"2020/03/09/Hexo主题添加网页访问计数功能/","link":"","permalink":"http://yoursite.com/2020/03/09/Hexo%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%BD%91%E9%A1%B5%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD/","excerpt":"0. 说明 添加不蒜子访问计数 以Hexo的yilia主题为例子","text":"0. 说明 添加不蒜子访问计数 以Hexo的yilia主题为例子 以Hexo目录作为说明的基点 1. 配置文件修改 在./themes/yilia/_config.yml中添加属性 本身yilia主题没有在_config.yml中保留不算子的属性，所有直接在末尾追加就行123# 开启不算子访问统计busuanzi: enable: true 2. 添加不蒜子插件 添加统计数据显示以及不蒜子网站访问脚本 在./themes/yilia/layout/_partla/footer.ejs末尾&lt;/footer&gt;与其上面的&lt;/div&gt;之间插入下面代码：12345678910111213&lt;% if (theme.busuanzi &amp;&amp; theme.busuanzi.enable)&#123; %&gt; &lt;!-- 不蒜子统计 --&gt; &lt;span id&#x3D;&quot;busuanzi_container_site_pv&quot;&gt; 本站总访问量&lt;span id&#x3D;&quot;busuanzi_value_site_pv&quot;&gt;&lt;&#x2F;span&gt;次 &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-meta-divider&quot;&gt; | &lt;&#x2F;span&gt; &lt;span id&#x3D;&quot;busuanzi_container_site_uv&quot;&gt; 本站访客数&lt;span id&#x3D;&quot;busuanzi_value_site_uv&quot;&gt;&lt;&#x2F;span&gt;人次 &lt;&#x2F;span&gt; &lt;script async src&#x3D;&quot;&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt; &lt;&#x2F;script&gt;&lt;% &#125; %&gt; 3. 资源 不蒜子本人官网链接：不蒜子 | 不如","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"不蒜子","slug":"不蒜子","permalink":"http://yoursite.com/tags/%E4%B8%8D%E8%92%9C%E5%AD%90/"}]},{"title":"逻辑斯蒂回归与Softmax回归的极大似然估计","slug":"逻辑斯蒂回归与Softmax回归的极大似然估计","date":"2020-03-08T14:56:46.000Z","updated":"2020-03-08T15:43:43.949Z","comments":true,"path":"2020/03/08/逻辑斯蒂回归与Softmax回归的极大似然估计/","link":"","permalink":"http://yoursite.com/2020/03/08/%E9%80%BB%E8%BE%91%E6%96%AF%E8%92%82%E5%9B%9E%E5%BD%92%E4%B8%8ESoftmax%E5%9B%9E%E5%BD%92%E7%9A%84%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/","excerpt":"0. 说明 使用极大似然估计(i.i.d independent and identically distributed) 推导逻辑斯蒂回归和Softmax回归用于分类问题的目标函数","text":"0. 说明 使用极大似然估计(i.i.d independent and identically distributed) 推导逻辑斯蒂回归和Softmax回归用于分类问题的目标函数 1. 逻辑斯蒂回归的极大似然估计 线性回归的任务是预测，单也可用来分类 伯努利分布 $y_n$ 1 0 $p_n$ $p^1(x_n;\\omega)$ $p^2(x_n;\\omega)$ 其中 $$p^1(x_n;\\omega)+p^2(x_n;\\omega)=1$$ $$p^1(x_n;\\omega)=\\frac{e^{\\omega^Tx_n}}{1+e^{\\omega^Tx_n}}$$ $$p^2(x_n;\\omega)=\\frac{1}{1+e^{\\omega^Tx_n}}$$ 极大似然估计(i.i.d)$$p(x_1,x_2,\\cdots,x_N;\\omega)=\\prod_{n=1}^{N}{[p^1(x_n;\\omega)]^y_n [p^0(x_n;\\omega)]^{1-y_n}}$$$$max_\\omega p(x_1,x_2,\\cdots,x_N;\\omega) \\iff min_\\omega [ -\\ln{p(x_1,x_2,\\cdots,x_N;\\omega)}\\large]$$ 目标函数$$\\begin{align} L(\\omega) &amp; =-\\ln{p(x_1,x_2,\\cdots,x_N;\\omega)} \\ &amp; =-\\sum_{n=1}^{N}{[y_n \\ln{p^1(x_n;\\omega)}+(1-y_N)\\ln{p^0(x_n;\\omega)}]} \\ &amp; =-\\sum_{n=1}^{N}{\\lbrace y_n[\\omega^Tx+\\ln{(1+exp(\\omega^Tx))}]+(1-y_n)\\ln{(1+exp(\\omega^Tx))} \\rbrace} \\ &amp; =\\sum_{n=1}^{N}{[-y_n\\omega^Tx+\\ln{(1+exp(\\omega^Tx))}]} \\ \\end{align}$$ 2. Softmax回归的极大似然估计 多类分类 概率分布列 $y_n$ 1 2 $\\cdots$ C $p_n$ $p^1(x_n;\\omega_1)$ $p^2(x_n;\\omega_2)$ $\\cdots$ $p^C(x_n;\\omega_C)$ 其中$$ \\omega^T= \\begin{bmatrix} \\omega_1^T \\ \\omega_2^T \\ \\vdots \\ \\omega_C^T \\ \\end{bmatrix}= \\begin{bmatrix} \\omega_{1,1} &amp; \\omega_{1,2} &amp; \\cdots &amp; \\omega_{1,N} \\ \\omega_{2,1} &amp; \\omega_{2,2} &amp; \\cdots &amp; \\omega_{2,N} \\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\ \\omega_{C,1} &amp; \\omega_{C,2} \\cdots &amp; \\omega_{C,N} \\ \\end{bmatrix}$$$$\\sum_{c=1}^{C}p^c(x_n;\\omega_c)=1$$$$p^c(x_n;\\omega_c)=\\frac{e^{\\omega_c^Tx_n}}{\\sum_{k=1}^{C}e^{\\omega_k^Tx_n}}$$ 极大似然估计(i.i.d)$$ \\text{引入示性函数} \\quad I(y_n=c)= \\begin{cases} 1, &amp; y_n=c \\ 0, &amp; y_n\\neq c \\ \\end{cases}$$ $$p(x_1,x_2,\\cdots,x_N;\\omega)=\\prod_{n=1}^{N}\\prod_{c=1}^{C}{\\large[p^c(x_n;\\omega_c)]^{I(y_n)}}$$$$max_\\omega p(x_1,x_2,\\cdots,x_N;\\omega) \\iff min_\\omega[-\\ln p(x_1,x_2,\\cdots,x_N;\\omega)]$$ 目标函数$$\\begin{align} L(\\omega) &amp; =-\\ln p(x_1,x_2,\\cdots,x_N;\\omega) \\ &amp; =-\\sum_{n=1}^{N}\\sum_{c=1}^{C}{I(y_n)\\ln p^c(x_n;\\omega_c)} \\ &amp; =-\\sum_{n=1}^{N}\\sum_{c=1}^{C}{I(y_n)\\frac{e^{\\omega_c^Tx_n}}{\\sum_{k=1}^{C}e^{\\omega_k^Tx_n}}} \\ \\end{align}$$令$$y_n=[\\delta(y_n=1),\\delta(y_n=2),\\cdots,\\delta(y_n=C)]$$$$h(\\omega^Tx_n)=\\frac{e^{\\omega^Tx}}{\\large{1}^T e^{\\omega^Tx}}=\\frac{e^{\\omega_c^Tx_n}}{\\sum_{k=1}^{C}e^{\\omega_k^Tx_n}}$$则有$$\\sum_{c=1}^{C}{I(y_n)\\frac{e^{\\omega_c^Tx_n}}{\\sum_{k=1}^{C}e^{\\omega_k^Tx_n}}}=y_n^T \\ln h(\\omega^Tx_n)$$目标函数化简为$$ L(\\omega)=-\\sum_{n=1}^{N}{y_n^T\\ln h(\\omega^Tx_n)}$$ 交叉熵损失函数(Cross Entropy Loss)在目标函数的基础上乘以$\\frac{1}{N}$$$J(\\omega)=-\\frac{1}{N}\\sum_{n=1}^{N}{y_n^T\\ln h(\\omega^Tx_n)}$$","categories":[],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"},{"name":"极大似然估计","slug":"极大似然估计","permalink":"http://yoursite.com/tags/%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1/"}]},{"title":"Hexo博客添加字数统计和阅读时长","slug":"Hexo博客添加字数统计和阅读时长","date":"2020-03-07T15:32:36.000Z","updated":"2020-03-08T15:44:51.768Z","comments":true,"path":"2020/03/07/Hexo博客添加字数统计和阅读时长/","link":"","permalink":"http://yoursite.com/2020/03/07/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%92%8C%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/","excerpt":"0. 说明hexo-wordcount 插件提供了字数统计和阅读时长预计功能，项目地址为：hexo-wordcount","text":"0. 说明hexo-wordcount 插件提供了字数统计和阅读时长预计功能，项目地址为：hexo-wordcount 下面均以Hexo博客根目录为基点。 1. 安装hexo-wordcount字数和阅读时长统计插件 进入博客根目录，使用npm安装hexo-wordcount插件 1npm install hexo-wordcount --save 加–save参数可以将安装信息写入package.json，方便以后可能需要再次安装。 安装完成之后，可以在hexo根目录的node_modules文件夹中找到hexo_wordcount文件夹，里面的index.js就是插件的全部内容。 2. 添加字数和阅读时长数据 在文章的标题下方添加字数统计和时长估计数据 在目录 ./themes/yilia/layout/_partial/post/ 创建新文件 wordcount.ejs，文件内容如下： 12345678910111213141516171819&lt;div style&#x3D;&quot;margin-top:10px;&quot;&gt; &lt;span class&#x3D;&quot;post-time&quot;&gt; &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt; &lt;i class&#x3D;&quot;fa fa-file-word&quot;&gt;&lt;&#x2F;i&gt; &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt; 字数统计: &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; wordcount(post.content) %&gt;字 &lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-time&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;span class&#x3D;&quot;post-meta-item-icon&quot;&gt; &lt;i class&#x3D;&quot;fa fa-hourglass-half&quot;&gt;&lt;&#x2F;i&gt; &lt;span class&#x3D;&quot;post-meta-item-text&quot;&gt; 阅读时长: &lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;post-count&quot;&gt;&lt;%&#x3D; min2read(post.content) %&gt;分 &lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;&#x2F;span&gt; &lt;&#x2F;div&gt; 然后，在./themes/yilia/layout/_partial/artivle.ejs中修改文件内容为： 12345678910111213&lt;div class&#x3D;&quot;article-inner&quot;&gt; &lt;% if (post.link || post.title)&#123; %&gt; &lt;header class&#x3D;&quot;article-header&quot;&gt; &lt;%- partial(&#39;post&#x2F;title&#39;, &#123;class_name: &#39;article-title&#39;&#125;) %&gt; &lt;% if (!post.noDate)&#123; %&gt; &lt;%- partial(&#39;post&#x2F;date&#39;, &#123;class_name: &#39;archive-article-date&#39;, date_format: null&#125;) %&gt; &lt;!--添加字数统计位置--&gt; &lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt; &lt;%- partial(&#39;post&#x2F;wordcount&#39;) %&gt; &lt;% &#125; %&gt; &lt;!--添加完成--&gt; &lt;% &#125; %&gt; &lt;&#x2F;header&gt; 注意：并非在文件末尾追加，而是在文件中查找到该部分，添加中间汉字提示的部分 tips: 由于文件中内容较多，可以使用一些编译器的查找功能 3. 开启功能 在./themes/yilia/_config.yml添加如下内容： 123# 是否开启字数统计# 不需要使用，直接设置值为&#96;false&#96;，或者注释掉word_count: true 效果如图所示：","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"wordcount","slug":"wordcount","permalink":"http://yoursite.com/tags/wordcount/"}]},{"title":"使用Hexo部署一个属于自己的博客","slug":"使用Hexo部署一个属于自己的博客","date":"2020-03-05T14:39:09.000Z","updated":"2020-03-06T16:19:46.738Z","comments":true,"path":"2020/03/05/使用Hexo部署一个属于自己的博客/","link":"","permalink":"http://yoursite.com/2020/03/05/%E4%BD%BF%E7%94%A8Hexo%E9%83%A8%E7%BD%B2%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"0. 说明 本次配置使用的环境为：deepin 15.11桌面版 其他操作系统类似","text":"0. 说明 本次配置使用的环境为：deepin 15.11桌面版 其他操作系统类似 1. 准备工作Node.js环境包 因为Hexo是基于Node.js的第三方模块，所以缺少Node.js不可。访问Node.js官网下载合适自己系统的Node.js安装包。此时最新版本为v13.9.0，我使用的平台为Linux Binaries (x64) 创建安装路径，并进行解压(我们以/usr/local/lib/nodejs文件夹为例)12sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs # 创建解压安装目录sudo tar -xJvf node-v13.9.0-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs # 将安装包解压安装 添加换将变量，在～/.bashrc文件后追加12345export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-v13.9.0-linux-x64&#x2F;bin# 或者export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-v13.9.0-linux-x64&#x2F;bin:$PATH# 或者直接使用命令添加echo &#39;export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-v13.9.0-linux-x64&#x2F;bin&quot;&#39; &gt;&gt; ~&#x2F;.bashrc 测试安装123node -vnpm versionnpx -v Git工具包 在bash中使用apt-get方法进行安装即可1sudo apt-get install git-core 测试安装1git --version 2. 开始工作安装Hexo Hexo是基于Node.js的第三方模块，所有我们需要对其进行单独安装，使用npm安装Hexo123npm install -g hexo-cli# 对于熟悉npm的进阶用户，可以仅局部安装Hexo包# npm install hexo 自动安装到Nodejs目录中,也无需添加环境变量，只有上一步安装Node.js中添加了即可 测试1hexo -v 建站 安装Hexo完成后，清执行系列命令，Hexo将会在指定文件夹中新建所需要的文件123456# 我以加家目录下创建Hexo文件夹为例进行cd ~ # 进入家目录sudo mkdir Hexo # 创建Hexo目录hexo init .&#x2F;Hexo # 初始化Hexo目录cd .&#x2F;Hexonpm install 新建完成后，指定文件夹的目录如下：12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes _config.yml 网站的配置 | Hexo信息，可以在此配置大部分的参数package.json 应用程序的信息。EJS，Stylus和Markdown renderer已默认安装，可以自由移除1234567891011121314151617181920package.json&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.8.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;, &quot;hexo-server&quot;: &quot;^0.3.3&quot; &#125;&#125; scaffolds 写作 | Hexo模板文件夹。当新建文章时，Hexo会根据scaffold来建立文件。 Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您需改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。 source 资源文件夹是存放用户资源的地方。除_posts文件夹之外，开头命名为_（下划线）的文件/文件夹和隐藏的文件将会被忽略。Markdown和HTML文件会被解析并防盗public文件夹，而其他文件会被拷贝过去。 themes 主题 | Hexo文件夹。Hexo会根据主题来生成静态网页。 3. 基本操作服务器hexo-server Hexo 3.0 把服务器独立成了个别模块，必须先安装hexo-server才能使用1npm install hexo-server --save 安装完成后，输入以下命令以启动服务器，您的网站会在http://localhost:4000 下启动。在服务器启动期间，Hexo会监视文件变动并自动更新，您无需重启服务器1hexo server 如果想要更改端口，或是在执行时遇到了EADDRINUSE错误，可以在执行时使用-p选项指定其他端口，如下：1hexo server -p 5000 静态模式 在静态模式下，服务器只处理public文件夹内的文件，而不会处理文件变动，在执行时，你应该先自动执行hexo generate，此模式通常用于生产环境（production mode）下。1hexo server -s 自定义IP 服务器默认运行在0.0.0.0，你可以覆盖默认的IP地址，如下：1hexo server -i 192.168.1.1 使用这个参数后，你就只能通过该IP才能访问站点。例如，对于一台使用无线网络的笔记本电脑，除了指向本机的127.0.0.1外，通常还有一个192.168..的局域网IP，如果像上面那样使用-i参数，就不能用127.0.0.1来访问站点了。对于有公网IP的主机，如果您指定一个局域网IP作为-i参数的值，那么就无法通过公网来访问站点。 写博客 执行下列命令来创建一片新的文章或者新的页面12# hexo new [layout] &lt;title&gt;hexo new post “my_first_blog” 可以在命令中指定文章的布局(layout)，默认为post，可以通过修改_config.yml中的default_layout参数来指定默认布局。 在./source/_posts/中产生新的.md文件 通过终端或者编辑器进行写入内容，网站会自动更新 其他有关命令123hexo clean # 清除缓存文件(db.json)和已生成的静态文件(public)hexo generate # hexo g 生成静态文件hexo list &lt;type&gt; # 列出网站资料 4. 部署（github）github仓库 登录github仓库 在右上角点击“+”号，点击“New repository” 用户部署个人博客的github仓库的命令必须为 github用户名.github.io；简单写一下仓库的描述，可以不写；下面选择public，公开的，私人的需要付费，最后点击Create repository创建完成 显示如下： 使用上面的http 进行git部署 进入创建的Hexo博客目录，执行下列命令安装git插件1npm install --save hexo-deployer-git 修改配置文件_config.yml，使用nano、或者使用vim编辑1nano _config.yml 下滑至最后，在# Deployment部分进行修改添加123456# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;JermainLiu&#x2F;JermainLiu.github.io.git # 刚刚在上面的创建的仓库后出现的http地址 branch: master # 不写默认为master Ctrl+o，Enter，保存，Ctrl+x退出编辑 配置git信息，用自己的信息替换下面引号中的内容。如果之前配置过git config的话，跳过12git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot; 执行部署命令1hexo deploy 在这个过程中会提示你输入github账户昵称和密码。 完成之后，刷新刚刚新建的github仓库，文件已经部署进github中，在地址栏访问你的仓库名称“username.github.io”即可访问博客。 本文总阅读量 次","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]},{"title":"First Blog","slug":"First-Blog","date":"2020-03-04T15:41:29.000Z","updated":"2020-03-05T15:55:17.961Z","comments":true,"path":"2020/03/04/First-Blog/","link":"","permalink":"http://yoursite.com/2020/03/04/First-Blog/","excerpt":"自己的博客基本搭建完成，接下来进行部署即可。","text":"自己的博客基本搭建完成，接下来进行部署即可。 第一次使用这种博客来写东西，心情还是很激动的呢！！","categories":[],"tags":[]}]